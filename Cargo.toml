[workspace]
resolver = "2"
members = [
    "attributed_text",
    "fontique",
    "parley",
    "parley_bench",
    "parley_core",
    "parley_dev",
    "unicode_data",
    "examples/tiny_skia_render",
    "examples/swash_render",
    "examples/vello_editor",
    "xtask",
]

[workspace.package]
edition = "2021"
# Keep in sync with RUST_MIN_VER in .github/workflows/ci.yml, with the relevant README.md files
# and with the MSRV in the `Unreleased` section of CHANGELOG.md.
rust-version = "1.82"
license = "Apache-2.0 OR MIT"
repository = "https://github.com/linebender/parley"

[workspace.dependencies]
accesskit = "0.21.0"
bytemuck = { version = "1.23.2", default-features = false }
databake = { version = "0.2", features = ["derive"] }
fontique = { version = "0.6.0", default-features = false, path = "fontique" }
harfrust = { version = "0.3.1", default-features = false }
hashbrown = "0.15.5"
icu_codepointtrie_builder = { version = "0.5.0", features = ["wasm"] }
icu_collections = { version = "2.0.0", default-features = false }
icu_locale = { version = "2.0.0", default-features = false }
icu_locale_core = { version = "2.0.0", default-features = false }
icu_normalizer = { version = "2.0.0", default-features = false }
icu_properties = { version = "2.0.0", default-features = false }
icu_provider = { version = "2.0.0", default-features = false, features = ["baked"] }
icu_provider_adapters = { version = "2.0.0", features = ["export"] }
icu_provider_blob = { version = "2.0.0", default-features = false }
icu_provider_export = { version = "2.0.0", default-features = false, features = ["baked_exporter"] }
icu_provider_source = { version = "2.0.0" }
icu_segmenter = { version = "2.0.0", default-features = false }
linebender_resource_handle = { version = "0.1.1", default-features = false }
parley = { version = "0.6.0", default-features = false, path = "parley" }
unicode_data = { path = "unicode_data" }
parley_dev = { default-features = false, path = "parley_dev" }
peniko = { version = "0.4.1", default-features = false }
skrifa = { version = "0.37.0", default-features = false }
smallvec = "1.15.1"
serde = { version = "1", features = ["derive"] }
read-fonts = { version = "0.35.0", default-features = false }
swash = { version = "0.2.6", default-features = false }
unicode-bidi = "0.3.18"
yoke = { version = "0.8", features = ["derive"] }
zerofrom = "0.1"
zerovec = "0.11.4"

[workspace.lints]
rust.unsafe_code = "deny"

# LINEBENDER LINT SET - Cargo.toml - v7
# See https://linebender.org/wiki/canonical-lints/
rust.keyword_idents_2024 = "forbid"
rust.non_ascii_idents = "forbid"
rust.non_local_definitions = "forbid"
rust.unsafe_op_in_unsafe_fn = "forbid"

rust.elided_lifetimes_in_paths = "warn"
rust.missing_debug_implementations = "warn"
rust.missing_docs = "warn"
rust.trivial_numeric_casts = "warn"
rust.unnameable_types = "warn"
rust.unreachable_pub = "warn"
rust.unused_import_braces = "warn"
rust.unused_lifetimes = "warn"
rust.unused_macro_rules = "warn"
rust.unused_qualifications = "warn"

clippy.too_many_arguments = "allow"

clippy.allow_attributes_without_reason = "warn"
clippy.cast_possible_truncation = "warn"
clippy.collection_is_never_read = "warn"
clippy.default_trait_access = "warn"
clippy.dbg_macro = "warn"
clippy.debug_assert_with_mut_call = "warn"
clippy.doc_markdown = "warn"
clippy.fn_to_numeric_cast_any = "warn"
clippy.infinite_loop = "warn"
clippy.large_stack_arrays = "warn"
clippy.mismatching_type_param_order = "warn"
clippy.missing_assert_message = "warn"
clippy.missing_fields_in_debug = "warn"
clippy.same_functions_in_if_condition = "warn"
clippy.semicolon_if_nothing_returned = "warn"
clippy.should_panic_without_expect = "warn"
clippy.todo = "warn"
clippy.unseparated_literal_suffix = "warn"
clippy.use_self = "warn"

clippy.cargo_common_metadata = "warn"
clippy.negative_feature_names = "warn"
clippy.redundant_feature_names = "warn"
clippy.wildcard_dependencies = "warn"
# END LINEBENDER LINT SET
